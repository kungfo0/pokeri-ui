{"version":3,"sources":["http.ts","component/styled-components.ts","component/PlayerSelect.tsx","component/AddRound.tsx","component/EditRound.tsx","component/Button.tsx","component/Input.tsx","component/LoginForm.tsx","component/LogOut.tsx","component/RoundDetails.tsx","component/Rounds.tsx","component/Totals.tsx","component/RoundsForSeason.tsx","component/Seasons.tsx","component/MainPage.tsx","AppRoutes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["postData","a","url","data","headers","fetch","method","cache","body","JSON","stringify","response","ok","Error","json","putData","localStorage","getItem","isAbortError","error","name","getData","controller","AbortController","signal","promise","Promise","resolve","console","log","message","cancel","abort","login","username","password","process","getSeasons","putRoundData","deleteRound","id","deleteData","CenteredContainer","styled","div","RightSideContainer","LogOutButtonContainer","LoginFormContainer","WelcomeText","h2","InputContainer","ButtonContainer","HorizontalRule","h5","hr","StyledInput","h4","input","rotate360","keyframes","ErrorMessage","Spinner","StyledButton","button","SmallButton","StyledTable","p","background","table","FlexBox","MEDIA_QUERY_IS_MOBILE","h1","props","open","Container","Card","CardHeader","CardBody","multiComponents","css","SelectContainer","PlayerSelect","values","extraPoints","selectionLimit","index","onSelect","onRemove","onBountySelect","onBountyRemove","displayValue","isObject","onSearch","options","selectedValues","placeholder","style","multiselectContainer","width","AddRound","navigate","useNavigate","useState","autoComplateValues","setAutoComplateValues","totalsValues","setTotalsValues","Date","roundDate","setRoundDate","availablePlayers","setAvailablePlayers","setExtraPoints","players","setPlayers","bounties","setBounties","selectedSeason","setSelectedSeason","finishedPositions","setFinishedPositions","seasons","setSeasons","saving","setSaving","query","useRef","undefined","totalsQuery","useEffect","current","q","then","resp","tq","season","setSelected","list","selected","filter","e","length","position","setRemoved","removed","setBountySelected","setBountyRemoved","saveRound","toISOString","round","root","onClick","flexGrow","onChange","date","dateFormat","lastRoundWinner","totals","totalPoints","Array","map","x","i","it","every","disabled","EditRound","useParams","setRound","deleting","setDeleting","delRound","status","getRound","colSpan","toLocaleDateString","year","month","day","sort","b","finishedPosition","eliminatedPlayer","eliminator","points","extrapoint","window","confirm","Button","content","loading","Input","type","value","LoginForm","setApiKey","setUsername","setPassword","setLoading","errorMessage","setErrorMessage","clickMe","event","enteredName","target","LogOut","variant","RoundDetails","sx","m","action","Link","href","IconButton","title","subheader","CardContent","TableContainer","component","Paper","boxShadow","Table","minWidth","TableHead","TableRow","TableCell","fontWeight","padding","align","TableBody","border","scope","amount","Rounds","roundsForSeason","Totals","eliminations","gamesPlayed","Box","display","flexDirection","flexWrap","maxWidth","RoundsForSeason","rounds","setRounds","setEliminations","setGamesPlayed","setTotalPoints","showRounds","setShowRounds","showTotals","setShowTotals","ExpandMore","other","theme","transform","expand","marginLeft","transition","transitions","create","duration","shortest","mb","CardActions","disableSpacing","Typography","Collapse","in","timeout","unmountOnExit","Seasons","hasNext","setHasNext","hasPrevious","setHasPrevious","allSeasons","indexOf","CircularProgress","ButtonGroup","MainPage","apiKey","ak","storeApiKey","setItem","ml","AppRoutes","path","element","darkTheme","createTheme","palette","mode","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","publicUrl","endsWith","slice","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.33e6a294.chunk.js","sourcesContent":["import { AutoComplateValuesRoundsForSeasonResponse, PromiseWithCancel, RoundDetails, RoundsForSeasonResponse, Status, TotalsForSeasonResponse } from './types'\n\nasync function postData(url = '', data = {}, headers = { 'Content-Type': 'application/json' }) {\n  const response = await fetch(url, {\n    method: 'POST',\n    cache: 'no-cache',\n    headers,\n    body: JSON.stringify(data),\n  })\n  if (!response.ok) {\n    throw Error(await response.json())\n  }\n  return response.json()\n}\n\nasync function putData(url = '', data = {}, headers = { 'Content-Type': 'application/json', 'x-api-key': localStorage.getItem('apiKey') as string }) {\n  const response = await fetch(url, {\n    method: 'PUT',\n    cache: 'no-cache',\n    headers,\n    body: JSON.stringify(data),\n  })\n  if (!response.ok) {\n    throw Error(await response.json())\n  }\n  return response.json()\n}\n\nfunction isAbortError(error: any): error is DOMException {\n  if (error && error.name === 'AbortError') {\n    return true\n  }\n  return false\n}\n\nexport const getData = (url: string, headers = { 'Content-Type': 'application/json', 'x-api-key': localStorage.getItem('apiKey') as string }) => {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const promise = new Promise(async (resolve) => {\n    try {\n      const response = await fetch(url, {\n        headers,\n        signal,\n      })\n      const data = await response.json()\n      resolve(data)\n    } catch (ex: unknown) {\n      if (isAbortError(ex)) {\n        console.log(ex.message)\n      }\n    }\n  })\n  ;(promise as PromiseWithCancel<any>).cancel = () => controller.abort()\n  return promise as PromiseWithCancel<any>\n}\n\nexport const deleteData = (url: string, headers = { 'Content-Type': 'application/json', 'x-api-key': localStorage.getItem('apiKey') as string }) => {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const promise = new Promise(async (resolve) => {\n    try {\n      const response = await fetch(url, {\n        method: 'DELETE',\n        cache: 'no-cache',\n        headers,\n        signal,\n      })\n      const data = await response.json()\n      resolve(data)\n    } catch (ex: unknown) {\n      if (isAbortError(ex)) {\n        console.log(ex.message)\n      }\n    }\n  })\n  ;(promise as PromiseWithCancel<any>).cancel = () => controller.abort()\n  return promise as PromiseWithCancel<any>\n}\n\nexport const login = async (username: string, password: string) => {\n  return await postData(process.env.REACT_APP_API_BASE_URL + '/login', { username, password })\n}\n\nexport const getRoundsForSeason = (season: string) => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/rounds-for-season?season=${season}`) as PromiseWithCancel<RoundsForSeasonResponse>\n}\n\n\nexport const getTotalsForSeason = (season: string) => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/totals-for-season?season=${season}`) as PromiseWithCancel<TotalsForSeasonResponse>\n}\n\nexport const getAutoComplateValues = () => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/autocomplete-values`) as PromiseWithCancel<AutoComplateValuesRoundsForSeasonResponse>\n}\n\nexport const getSeasons = async () => {\n  return await getData(`${process.env.REACT_APP_API_BASE_URL}/seasons`)\n}\n\nexport const putRoundData = async (data: Record<string, unknown>) => {\n  return await putData(process.env.REACT_APP_API_BASE_URL + '/round', data) as RoundDetails\n}\n\nexport const getRound = (id: string) => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/round/${id}`) as PromiseWithCancel<RoundDetails>\n}\n\nexport const deleteRound = (id: string) => {\n  return deleteData(`${process.env.REACT_APP_API_BASE_URL}/round/${id}`) as PromiseWithCancel<Status>\n}","import styled, { css, keyframes } from 'styled-components'\n\nexport const CenteredContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n`\nexport const RightSideContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: right;\n`\nexport const LogOutButtonContainer = styled.div`\n  margin: 1rem 0 2rem 0;\n  width: 200px;\n`\n\nexport const LoginFormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 80vh;\n  width: 30vw;\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(8.5px);\n  -webkit-backdrop-filter: blur(8.5px);\n  border-radius: 10px;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 0.4rem;\n  @media only screen and (max-width: 320px) {\n    width: 80vw;\n    height: 90vh;\n    hr {\n      margin-bottom: 0.3rem;\n    }\n    h4 {\n      font-size: small;\n    }\n  }\n  @media only screen and (min-width: 360px) {\n    width: 80vw;\n    height: 90vh;\n    h4 {\n      font-size: small;\n    }\n  }\n  @media only screen and (min-width: 411px) {\n    width: 80vw;\n    height: 90vh;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 80vw;\n    height: 80vh;\n  }\n  @media only screen and (min-width: 1024px) {\n    width: 70vw;\n    height: 50vh;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 30vw;\n    height: 80vh;\n  }\n`\n\nexport const WelcomeText = styled.h2`\n  margin: 3rem 0 2rem 0;\n`\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 20%;\n  width: 100%;\n`\n\nexport const ButtonContainer = styled.div`\n  margin: 1rem 0 2rem 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const LoginWith = styled.h5`\n  cursor: pointer;\n`\n\nexport const HorizontalRule = styled.hr`\n  width: 90%;\n  height: 0.3rem;\n  border-radius: 0.8rem;\n  border: none;\n  background: linear-gradient(to right, #14163c 0%, #03217b 79%);\n  background-color: #ebd0d0;\n  margin: 1.5rem 0 1rem 0;\n  backdrop-filter: blur(25px);\n`\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin: 2rem 0 3rem 0;\n  width: 80%;\n`\n\nexport const ForgotPassword = styled.h4`\n  cursor: pointer;\n`\n\nexport const StyledInput = styled.input`\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  border-radius: 2rem;\n  width: 80%;\n  height: 3rem;\n  padding: 1rem;\n  border: none;\n  outline: none;\n  color: #3c354e;\n  font-size: 1rem;\n  font-weight: bold;\n  &:focus {\n    display: inline-block;\n    box-shadow: 0 0 0 0.2rem #b9abe0;\n    backdrop-filter: blur(12rem);\n    border-radius: 2rem;\n  }\n  &::placeholder {\n    color: #b9abe099;\n    font-weight: 100;\n    font-size: 1rem;\n  }\n`\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const ErrorMessage = styled.div`\n  color: #d8000c;\n  height: 24px;\n`\n\nexport const Spinner = styled.div`\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n\n  border-top: 2px solid grey;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid grey;\n  border-left: 4px solid black;\n  background: transparent;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const StyledButton = styled.button`\n  background: linear-gradient(to right, #14163c 0%, #03217b 79%);\n  text-transform: uppercase;\n  letter-spacing: 0.2rem;\n  width: 65%;\n  height: 3rem;\n  border: none;\n  color: white;\n  border-radius: 2rem;\n  cursor: pointer;\n  &:active {\n    transform: translateY(4px);\n  }\n  &:hover {\n    filter: brightness(1.5);\n  }\n`\n\nexport const SmallButton = styled.button`\n  background: linear-gradient(to right, #14163c 0%, #03217b 79%);\n  text-transform: uppercase;\n  margin: 20px;\n  width: 120px;\n  height: 25px;\n  border: none;\n  color: white;\n  border-radius: 2rem;\n  cursor: pointer;\n  &:disabled {\n    filter: brightness(0.5);\n    &:hover {\n      filter: brightness(0.5);\n    }\n  }\n  &:active {\n    transform: translateY(4px);\n  }\n  &:hover {\n    filter: brightness(1.5);\n  }\n`\n\nexport type StyledIconProps = {\n  background: string\n}\n\nexport const StyledIcon = styled.div`\n  height: 3.5rem;\n  width: 3.5rem;\n  background: ${(p: StyledIconProps) => p.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4rem;\n  color: white;\n  cursor: pointer;\n  svg {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n`\n\nexport const StyledTable = styled.table`\n  border-spacing: 0px;\n  background: rgba(255, 255, 255, 0.85);\n  width: 450px;\n  margin: 20px;\n  border: 1px solid black;\n  th,\n  td {\n    border: 1px solid black;\n    padding: 3px;\n  }\n  th:first-child {\n    border-right-width: 0px;\n    text-align: center;\n  }\n  th:last-child {\n    border-left-width: 0px;\n    text-align: right;\n  }\n  td:first-child {\n    text-align: center;\n  }\n  tr {\n    text-align: left;\n  }\n`\n\nexport const FlexBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 100%;\n  flex-wrap: wrap;\n`\nexport const AppWrapper = styled.div`\n  margin: 20px;\n`\n\nexport const FacebookBackground = 'linear-gradient(to right, #0546A0 0%, #0546A0 40%, #663FB6 100%)'\nexport const InstagramBackground = 'linear-gradient(to right, #A12AC4 0%, #ED586C 40%, #F0A853 100%)'\nexport const TwitterBackground = 'linear-gradient(to right, #56C1E1 0%, #35A9CE 50%)'\n\nexport const Header = styled.h1`\n`\n\ninterface ContentProps {\n  open: boolean\n}\n\nexport const Content = styled.div`\n  border-top: none;\n  opacity: ${(props: ContentProps) => (props.open ? '1' : '0')};\n  max-height: ${(props) => (props.open ? '100%' : '0')};\n  overflow: hidden;\n  padding: ${(props) => (props.open ? '15px' : '0 15px')};\n  transition: all 0.3s;\n\n  p {\n    margin: 0;\n  }\n`\n\nexport const MEDIA_QUERY_IS_MOBILE = '@media only screen and (max-width: 768px)'\nexport const MEDIA_QUERY_IS_MOBILE_XS = '@media only screen and (max-width: 525px)'\nexport const MEDIA_QUERY_IS_TABLET_OR_DESKTOP = '@media only screen and (min-width: 992px)'\nexport const MEDIA_QUERY_IS_TABLET = '@media only screen and (max-width: 991px) and (min-width: 769px)'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0.25rem 1.75rem;\n  ${MEDIA_QUERY_IS_MOBILE} {\n    font-size: 0.96em;\n    padding: 0.25rem 1.25rem;\n  }\n`\n\nexport const Card = styled.div`\n  min-width: 0;\n  display: flex;\n  margin: 1.25rem 0;\n  position: relative;\n  border-radius: 3px;\n  word-wrap: break-word;\n  background-color: #fff;\n  flex-direction: column;\n  background-clip: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  box-shadow: rgb(0 0 0 / 10%) 0px 1px 3px 0px, rgb(0 0 0 / 5%) 0px 5px 15px 0px;\n  ${MEDIA_QUERY_IS_MOBILE} {\n    border: none;\n    border-radius: 0;\n    box-shadow: none;\n    margin: 0;\n  }\n`\n\nexport const CardHeader = styled.div`\n  display: flex;\n  font-size: 1.15rem;\n  flex-flow: row wrap;\n  background-color: #fff;\n  padding: 0.75rem 1.25rem;\n  border-top-left-radius: 0.25rem;\n  border-top-right-radius: 0.25rem;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  ${MEDIA_QUERY_IS_MOBILE} {\n    font-size: 1.1rem;\n    text-align: center;\n    display: inline-block;\n    padding: 0 1.15rem 1rem;\n  }\n`\n\nexport const CardBody = styled.div<{ multiComponents?: boolean }>`\n  flex: 1 1 auto;\n  min-height: 32rem;\n  padding: 0.75rem 1.25rem;\n  ${({ multiComponents }) =>\n    multiComponents &&\n    css`\n      > div {\n        margin-bottom: 1.5rem;\n        :first-of-type > label {\n          margin-top: 0;\n        }\n        > label {\n          font-size: 18px;\n          margin-bottom: 0.5rem;\n        }\n      }\n    `}\n  ${MEDIA_QUERY_IS_MOBILE} {\n    padding: 0rem 0;\n  }\n`\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n`\n","import React from 'react'\nimport { SelectContainer } from './styled-components'\nimport { Multiselect } from 'multiselect-react-dropdown'\n\nexport interface PositionName {\n  position: number\n  name: string\n}\n\ntype PlayerSelectProps = Readonly<{\n  values: PositionName[]\n  extraPoints: PositionName[]\n  selectionLimit: number\n  index: number\n  onSelect: (selectedList: PositionName[], selected: PositionName) => any\n  onRemove: (removedList: PositionName[], removed: PositionName) => any\n  onBountySelect: (selectedList: PositionName[], selected: PositionName) => any\n  onBountyRemove: (selectedList: PositionName[], selected: PositionName) => any\n}>\n\nfunction PlayerSelect({ values, extraPoints, selectionLimit, index, onSelect, onRemove, onBountySelect, onBountyRemove }: PlayerSelectProps) {\n  return (\n    <SelectContainer>\n      <p>{index}.</p>\n      <Multiselect\n        key={index}\n        id={`finishedposition-${index}`}\n        displayValue=\"name\"\n        isObject={true}\n        onRemove={onRemove}\n        onSearch={function noRefCheck() {}}\n        onSelect={onSelect}\n        options={values}\n        selectedValues={[]}\n        placeholder={index === 1 ? 'Eliminated' : 'Eliminated / Eliminator'}\n        selectionLimit={selectionLimit}\n        style={{\n          multiselectContainer: {\n            width: '70%',\n          },\n        }}\n      />\n      <Multiselect\n        key={`extraPoints-${index}`}\n        id={`extraPoints-${index}`}\n        displayValue=\"name\"\n        isObject={true}\n        onSearch={function noRefCheck() {}}\n        onSelect={onBountySelect}\n        onRemove={onBountyRemove}\n        options={extraPoints}\n        selectedValues={[]}\n        selectionLimit={1}\n        placeholder={'Bounty'}\n        style={{\n          multiselectContainer: {\n            width: '130px',\n          },\n        }}\n      />\n    </SelectContainer>\n  )\n}\n\nexport default PlayerSelect\n","import React, { useState, useRef, useEffect } from 'react'\nimport { getAutoComplateValues, getTotalsForSeason, putRoundData } from '../http'\nimport PlayerSelect, { PositionName } from './PlayerSelect'\nimport { AutoComplateValuesRoundsForSeasonResponse, PromiseWithCancel, TotalsForSeasonResponse } from '../types'\nimport { Container, Card, CardBody, CardHeader, SmallButton, FlexBox } from './styled-components'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Multiselect } from 'multiselect-react-dropdown'\nimport { useNavigate } from 'react-router-dom'\nimport { root } from '..'\n\nfunction AddRound() {\n  const navigate = useNavigate()\n  const [autoComplateValues, setAutoComplateValues] = useState<AutoComplateValuesRoundsForSeasonResponse | null>(null)\n  const [totalsValues, setTotalsValues] = useState<TotalsForSeasonResponse | null>(null)\n  const [roundDate, setRoundDate] = useState(new Date())\n  const [availablePlayers, setAvailablePlayers] = useState<string[]>([])\n  const [extraPoints, setExtraPoints] = useState<string[]>([])\n  const [players, setPlayers] = useState<number>(5)\n  const [bounties, setBounties] = useState<PositionName[]>([])\n  const [selectedSeason, setSelectedSeason] = useState<string>('')\n  const [finishedPositions, setFinishedPositions] = useState<PositionName[][]>([])\n  const [seasons, setSeasons] = useState<string[]>([])\n  const [saving, setSaving] = useState<boolean>(false)\n  const query = useRef<PromiseWithCancel<AutoComplateValuesRoundsForSeasonResponse> | undefined>(undefined)\n  const totalsQuery = useRef<PromiseWithCancel<TotalsForSeasonResponse> | undefined>(undefined)\n\n  useEffect(() => {\n    console.log('useEffect', { autoComplateValues, availablePlayers })\n    if (!autoComplateValues) {\n      query.current?.cancel()\n      setAutoComplateValues(null)\n      const q = getAutoComplateValues()\n      query.current = q\n      q.then((resp) => {\n        setAutoComplateValues(resp)\n        setAvailablePlayers(resp.players)\n        console.log('resp.players', resp.players)\n        setExtraPoints(resp.extraPoints)\n        setSeasons(resp.seasons)\n        setSelectedSeason(resp.seasons[0])\n      })\n    }\n    if (!totalsValues && selectedSeason) {\n      totalsQuery.current?.cancel()\n      setTotalsValues(null)\n      const tq = getTotalsForSeason(selectedSeason)\n      totalsQuery.current = tq\n      tq.then((resp) => {\n        setTotalsValues(resp)\n      })\n    }\n  }, [autoComplateValues, availablePlayers, totalsValues, selectedSeason])\n\n  const setSelected = (list: PositionName[], selected: PositionName) => {\n    console.log('setSelected', { list, selected })\n    setFinishedPositions([...finishedPositions.filter((e) => e.length > 0 && e[0].position !== selected.position), list])\n  }\n\n  const setRemoved = (list: PositionName[], removed: PositionName) => {\n    console.log('setRemoved', { list, removed })\n    setFinishedPositions(finishedPositions.filter((e) => e.length > 0 && e[0].position !== removed.position))\n  }\n\n  const setBountySelected = (list: PositionName[], selected: PositionName) => {\n    console.log('setBountySelected', { list, selected })\n    setBounties([...bounties, selected])\n  }\n\n  const setBountyRemoved = (list: PositionName[], selected: PositionName) => {\n    console.log('setBountyRemoved', { list, selected })\n    setBounties(bounties.filter((e) => e.position !== selected.position))\n  }\n\n  const saveRound = async () => {\n    const data = { selectedSeason, roundDate: roundDate.toISOString(), finishedPositions, bounties, players }\n    console.log('saveRound', data)\n    try {\n      setSaving(true)\n      const response = await putRoundData(data)\n      console.log('saveRound', response)\n      if (response?.round?.id !== '') {\n        console.log('juuh', response)\n        navigate(`${root}/`)\n      }\n    } catch (e) {}\n    setSaving(false)\n  }\n\n  return (\n    <div>\n      <SmallButton onClick={() => navigate(`${root}/`)}>Back</SmallButton>\n      {autoComplateValues && (\n        <Container>\n          <Card>\n            <CardHeader>\n              <FlexBox>\n                Add Round Details\n                <Multiselect\n                  isObject={false}\n                  selectedValues={[seasons.length > 0 ? seasons[0] : '']}\n                  onSearch={function noRefCheck() {}}\n                  onSelect={(list, selected) => setSelectedSeason(selected)}\n                  options={seasons}\n                  placeholder={'Season'}\n                  selectionLimit={1}\n                  style={{\n                    multiselectContainer: {\n                      flexGrow: '1',\n                    },\n                  }}\n                />\n                <DatePicker selected={roundDate} onChange={(date: Date) => setRoundDate(date as Date)} dateFormat=\"dd.MM.yyyy\" />\n              </FlexBox>\n            </CardHeader>\n            <CardBody>\n              <div>Last round winner: <strong>{autoComplateValues.lastRoundWinner}</strong></div>\n              <div>Person with the most points in season { totalsValues?.season }: <strong>{totalsValues?.totals?.totalPoints[0].name}</strong></div>\n              {[...Array(players)].map((x, i) => (\n                <PlayerSelect\n                  values={availablePlayers.map((it) => ({ position: i + 1, name: it }))}\n                  extraPoints={extraPoints.map((it) => ({ position: i + 1, name: it }))}\n                  onSelect={setSelected}\n                  onBountySelect={setBountySelected}\n                  onBountyRemove={setBountyRemoved}\n                  onRemove={setRemoved}\n                  selectionLimit={i == 0 ? 1 : 2}\n                  index={++i}\n                  key={i}\n                />\n              ))}\n\n              {players < 10 && <SmallButton onClick={() => setPlayers(players + 1)}>Add</SmallButton>}\n              {players > 1 && <SmallButton onClick={() => setPlayers(players - 1)}>Remove</SmallButton>}\n              {players > 1 && players < 11 && finishedPositions.length === players && finishedPositions.filter((it) => it.length > 0 && it[0].position !== 1).every((it) => it.length === 2) && (\n                <SmallButton onClick={() => saveRound()} disabled={saving}>\n                  Save\n                </SmallButton>\n              )}\n            </CardBody>\n          </Card>\n        </Container>\n      )}\n    </div>\n  )\n}\n\nexport default AddRound\n","import { useEffect, useRef, useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { deleteRound, getRound } from '../http'\nimport { PromiseWithCancel, RoundDetails } from '../types'\nimport { SmallButton, Spinner, StyledTable } from './styled-components'\nimport { FaTrash } from 'react-icons/fa'\nimport { root } from '..'\n\nfunction EditRound() {\n  const navigate = useNavigate()\n  let { id } = useParams()\n  const [round, setRound] = useState<RoundDetails>()\n  let query = useRef<PromiseWithCancel<RoundDetails> | undefined>(undefined)\n  const [deleting, setDeleting] = useState<boolean>(false)\n\n  const delRound = async () => {\n    try {\n      setDeleting(true)\n      const response = await deleteRound(id || '')\n      console.log('deleteRound', response)\n      if (response.status === 'deleted') {\n        navigate(`${root}/`)\n      }\n    } catch (e) {}\n    setDeleting(false)\n  }\n\n  useEffect(() => {\n    const q = getRound(id || '')\n    query.current = q\n    q.then((resp) => {\n      setRound(resp)\n    })\n  }, [id])\n\n  return (\n    <>\n      <SmallButton onClick={() => navigate(`${root}/`)}>Back</SmallButton>\n      {round ? (\n        <>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th colSpan={5}>Round - {new Date(round.round.date).toLocaleDateString('fi-FI', { year: 'numeric', month: 'numeric', day: 'numeric' })}</th>\n              </tr>\n              <tr>\n                <th>Rank</th>\n                <th>Player</th>\n                <th>Eliminator</th>\n                <th>Points</th>\n                <th>Extra</th>\n              </tr>\n            </thead>\n            <tbody>\n              {round.finishedPositions\n                .sort((a, b) => (a.finishedPosition < b.finishedPosition ? -1 : 1))\n                .map(function (it) {\n                  return (\n                    <tr key={it.finishedPosition}>\n                      <td>{it.finishedPosition}</td>\n                      <td>{it.eliminatedPlayer}</td>\n                      <td>{it.eliminator}</td>\n                      <td>{it.points}</td>\n                      <td>{it?.extrapoint}</td>\n                    </tr>\n                  )\n                })}\n            </tbody>\n          </StyledTable>\n          <SmallButton onClick={() => (window.confirm('Delete round?') ? delRound() : '')} disabled={deleting}>\n            <FaTrash /> Delete\n          </SmallButton>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  )\n}\n\nexport default EditRound\n","import React from 'react'\nimport { ButtonProps } from '../types'\nimport { Spinner, StyledButton } from './styled-components'\n\nexport default function Button({ content, loading, onClick }: ButtonProps) {\n  return <StyledButton onClick={onClick}>{loading ? <Spinner /> : <div>{content}</div>}</StyledButton>\n}\n","import React from 'react'\nimport { InputProps } from '../types'\nimport { StyledInput } from './styled-components'\n\nexport default function Input({ type, placeholder, value, onChange }: InputProps) {\n  return <StyledInput type={type} placeholder={placeholder} value={value} onChange={onChange} />\n}\n","import React, { useState } from 'react'\nimport Button from './Button'\nimport Input from './Input'\nimport { ErrorMessage, LoginFormContainer, WelcomeText, InputContainer, ButtonContainer, HorizontalRule } from './styled-components'\nimport { login } from '../http'\nimport { LoginFormProps } from '../types'\n\nfunction LoginForm({ setApiKey }: LoginFormProps) {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const clickMe = async () => {\n    setLoading(true)\n    setErrorMessage('')\n    try {\n      const response = await login(username, password)\n      setLoading(false)\n      setApiKey(response['api-key'])\n    } catch (e) {\n      setErrorMessage('Invalid credentials')\n      setLoading(false)\n    }\n  }\n  const usernameInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const enteredName = event.target.value\n    setUsername(enteredName)\n  }\n  const passwordInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const enteredName = event.target.value\n    setPassword(enteredName)\n  }\n  return (\n    <LoginFormContainer>\n      <WelcomeText>Welcome</WelcomeText>\n      <InputContainer>\n        <Input type=\"text\" placeholder=\"Username\" value={username} onChange={usernameInputHandler} />\n        <Input type=\"password\" placeholder=\"Password\" value={password} onChange={passwordInputHandler} />\n      </InputContainer>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <ButtonContainer>\n        <Button content=\"Log in\" onClick={clickMe} loading={loading} />\n      </ButtonContainer>\n      {/* <LoginWith>OR LOGIN WITH</LoginWith> */}\n      <HorizontalRule />\n      {/*       <IconsContainer>\n        <Icon color={FacebookBackground}>\n          <FaFacebookF />\n        </Icon>\n        <Icon color={InstagramBackground}>\n          <FaInstagram />\n        </Icon>\n        <Icon color={TwitterBackground}>\n          <FaTwitter />\n        </Icon>\n      </IconsContainer>\n      <ForgotPassword>Forgot Password ?</ForgotPassword> */}\n    </LoginFormContainer>\n  )\n}\n\nexport default LoginForm\n","import Button from '@mui/material/Button'\nimport React from 'react'\nimport { LogOutButtonContainer } from './styled-components'\n\ninterface LogOutProps {\n  setApiKey: (apiKey: string) => void\n}\n\nexport default function LogOut({ setApiKey }: LogOutProps) {\n  const logOut = () => {\n    setApiKey('')\n  }\n  return (\n    <LogOutButtonContainer>\n      <Button variant=\"contained\" onClick={logOut}>\n        Logout\n      </Button>\n    </LogOutButtonContainer>\n  )\n}\n","import * as React from 'react'\nimport Card from '@mui/material/Card'\nimport CardHeader from '@mui/material/CardHeader'\nimport CardContent from '@mui/material/CardContent'\nimport { RoundDetailsProps } from '../types'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport Link from '@mui/material/Link'\nimport EditIcon from '@mui/icons-material/Edit'\nimport { IconButton } from '@mui/material'\n\nfunction RoundDetails({ round, index }: RoundDetailsProps) {\n  return (\n    <Card sx={{ width: 450, m: 2 }}>\n      <CardHeader\n        sx={{ p: 1 }}\n        action={\n          <Link href={`round/${round.round.id}`}>\n            <IconButton aria-label=\"settings\">\n              <EditIcon />\n            </IconButton>\n          </Link>\n        }\n        title={`Round ${index}`}\n        subheader={new Date(round.round.date).toLocaleDateString('fi-FI', { year: 'numeric', month: 'numeric', day: 'numeric' })}\n      />\n      <CardContent>\n        <TableContainer component={Paper} sx={{ boxShadow: 0 }}>\n          <Table sx={{ minWidth: 400, boxShadow: 0 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\">\n                  Rank\n                </TableCell>\n                <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                  Player\n                </TableCell>\n                <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                  Eliminator\n                </TableCell>\n                <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"right\">\n                  Points\n                </TableCell>\n                <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"right\">\n                  Extra\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {round.finishedPositions.map((it, index) => (\n                <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                  <TableCell padding=\"none\" component=\"th\" scope=\"row\">\n                    {index + 1}\n                  </TableCell>\n                  <TableCell padding=\"none\" align=\"left\">\n                    {it.eliminatedPlayer}\n                  </TableCell>\n                  <TableCell padding=\"none\" align=\"left\">\n                    {it.eliminator}\n                  </TableCell>\n                  <TableCell padding=\"none\" align=\"right\">\n                    {it.points}\n                  </TableCell>\n                  <TableCell padding=\"none\" align=\"right\">\n                    {it?.extraPoints?.type} {it?.extraPoints?.amount}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default RoundDetails\n","import React from 'react'\nimport { RoundsProps } from '../types'\nimport RoundDetails from './RoundDetails'\nimport { FlexBox } from './styled-components'\n\nfunction Rounds({ roundsForSeason }: RoundsProps) {\n  return (\n    <FlexBox data-test-id='rounds-for-season'>\n      {roundsForSeason.map(function (it, index) {\n        return <RoundDetails round={it} index={index + 1} key={index} />\n      })}\n    </FlexBox>\n  )\n}\n\nexport default Rounds\n","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from '@mui/material'\nimport { TotalsProps } from '../types'\n\nfunction Totals({ eliminations, gamesPlayed, totalPoints }: TotalsProps) {\n  return (\n    <Box sx={{ width: '100%', display: 'flex', flexDirection: 'row', flexWrap: 'wrap', m: 2 }} data-test-id=\"totals\">\n      <TableContainer component={Paper} sx={{ boxShadow: 0, minWidth: 300, maxWidth: 450, m: 1, p: 1 }}>\n        <Table sx={{ minWidth: 270, boxShadow: 0 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" colSpan={2}>\n                Participations\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                Player\n              </TableCell>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                Amount\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {gamesPlayed.map((it, index) => (\n              <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                <TableCell padding=\"none\" align=\"left\">\n                  {it.name}\n                </TableCell>\n                <TableCell padding=\"none\" align=\"left\">\n                  {it.value}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <TableContainer component={Paper} sx={{ boxShadow: 0, minWidth: 300, maxWidth: 450, m: 1, p: 1 }}>\n        <Table sx={{ minWidth: 270, boxShadow: 0 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" colSpan={2}>\n                Total Points\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                Player\n              </TableCell>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                Amount\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {totalPoints.map((it, index) => (\n              <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                <TableCell padding=\"none\" align=\"left\">\n                  {it.name}\n                </TableCell>\n                <TableCell padding=\"none\" align=\"left\">\n                  {it.value}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <TableContainer component={Paper} sx={{ boxShadow: 0, minWidth: 300, maxWidth: 450, m: 1, p: 1 }}>\n        <Table sx={{ minWidth: 270, boxShadow: 0 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" colSpan={2}>\n                Eliminations\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                Player\n              </TableCell>\n              <TableCell sx={{ fontWeight: 'bold' }} padding=\"none\" align=\"left\">\n                Amount\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {eliminations.map((it, index) => (\n              <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                <TableCell padding=\"none\" align=\"left\">\n                  {it.name}\n                </TableCell>\n                <TableCell padding=\"none\" align=\"left\">\n                  {it.value}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n}\n\nexport default Totals\n","import { Collapse, Card, CardActions, IconButton, styled, IconButtonProps, Typography } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getRoundsForSeason } from '../http'\nimport { RoundContainer, RoundsForSeasonProps, NameValue, RoundsForSeasonResponse, PromiseWithCancel } from '../types'\nimport Rounds from './Rounds'\nimport { Spinner } from './styled-components'\nimport Totals from './Totals'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nfunction RoundsForSeason({ selectedSeason }: RoundsForSeasonProps) {\n  const [rounds, setRounds] = useState<RoundContainer[]>([])\n  // const [season, setSeason] = useState({ name: '' })\n  const [eliminations, setEliminations] = useState<NameValue[]>([])\n  const [gamesPlayed, setGamesPlayed] = useState<NameValue[]>([])\n  const [totalPoints, setTotalPoints] = useState<NameValue[]>([])\n  const [showRounds, setShowRounds] = useState(true)\n  const [showTotals, setShowTotals] = useState(true)\n  let query = useRef<PromiseWithCancel<RoundsForSeasonResponse> | undefined>(undefined)\n\n  useEffect(() => {\n    query.current?.cancel()\n    setRounds([])\n    const q = getRoundsForSeason(selectedSeason)\n    query.current = q\n    q.then((resp) => {\n      setRounds(resp.rounds)\n      // setSeason(resp.season)\n      setEliminations(resp.totals.eliminations)\n      setGamesPlayed(resp.totals.gamesPlayed)\n      setTotalPoints(resp.totals.totalPoints)\n    })\n  }, [selectedSeason])\n\n  interface ExpandMoreProps extends IconButtonProps {\n    expand: boolean\n  }\n\n  const ExpandMore = styled((props: ExpandMoreProps) => {\n    const { ...other } = props\n    return <IconButton {...other} />\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  }))\n\n  return (\n    <div>\n      {rounds.length === 0 ? (\n        <div>\n          <Spinner />\n        </div>\n      ) : (\n        <Box>\n          <Card sx={{ mb: 2 }}>\n            <CardActions disableSpacing>\n              <Typography variant=\"h5\" component=\"div\">\n                Rounds\n              </Typography>\n              <ExpandMore expand={showRounds} onClick={() => setShowRounds(!showRounds)} aria-expanded={showRounds} aria-label=\"show more\">\n                <ExpandMoreIcon />\n              </ExpandMore>\n            </CardActions>\n            <Collapse in={showRounds} timeout=\"auto\" unmountOnExit>\n              <Rounds roundsForSeason={rounds} />\n            </Collapse>\n          </Card>\n          <Card sx={{ mb: 2 }}>\n            <CardActions disableSpacing>\n              <Typography variant=\"h5\" component=\"div\">\n                Totals\n              </Typography>\n              <ExpandMore expand={showTotals} onClick={() => setShowTotals(!showTotals)} aria-expanded={showTotals} aria-label=\"show more\">\n                <ExpandMoreIcon />\n              </ExpandMore>\n            </CardActions>\n            <Collapse in={showTotals} timeout=\"auto\" unmountOnExit>\n              <Totals eliminations={eliminations} gamesPlayed={gamesPlayed} totalPoints={totalPoints} />\n            </Collapse>\n          </Card>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nexport default RoundsForSeason\n","import Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Typography from '@mui/material/Typography'\nimport { useState, useEffect } from 'react'\nimport { getSeasons } from '../http'\nimport RoundsForSeason from './RoundsForSeason'\n\nfunction Seasons() {\n  const [selected, setSelected] = useState('')\n  const [seasons, setSeasons] = useState<string[]>([])\n  const [hasNext, setHasNext] = useState(false)\n  const [hasPrevious, setHasPrevious] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      const resp = await getSeasons()\n      if (resp.seasons.length > 0) {\n        const selectedSeason = resp.seasons[0]\n        const allSeasons = resp.seasons\n        setSelected(selectedSeason)\n        setSeasons(allSeasons)\n        setHasNext(allSeasons.indexOf(selectedSeason) - 1 >= 0)\n        setHasPrevious(allSeasons.indexOf(selectedSeason) + 1 < allSeasons.length)\n      }\n    })()\n  }, [setSeasons, setSelected, setHasNext, setHasPrevious])\n\n  const setPrevious = () => {\n    const index = seasons.indexOf(selected) + 1\n    if (hasPrevious) {\n      setSelected(seasons[index])\n      setHasNext(seasons.indexOf(seasons[index]) - 1 >= 0)\n      setHasPrevious(seasons.indexOf(seasons[index]) + 1 < seasons.length)\n    }\n  }\n  const setNext = () => {\n    const index = seasons.indexOf(selected) - 1\n    if (hasNext) {\n      setSelected(seasons[index])\n      setHasNext(seasons.indexOf(seasons[index]) - 1 >= 0)\n      setHasPrevious(seasons.indexOf(seasons[index]) + 1 < seasons.length)\n    }\n  }\n\n  return (\n    <div>\n      {seasons.length === 0 ? (\n        <div>\n          <CircularProgress />\n        </div>\n      ) : (\n        <Box sx={{ p: 2, boxShadow: 0 }}>\n          <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\" sx={{ mb: 2 }}>\n            <Button variant=\"contained\" onClick={setPrevious} disabled={!hasPrevious}>\n              Previous\n            </Button>\n            <Typography variant=\"h5\" component=\"div\" sx={{ p: 2 }}>\n              {selected}\n            </Typography>\n            <Button variant=\"contained\" onClick={setNext} disabled={!hasNext}>\n              Next\n            </Button>\n          </ButtonGroup>\n          <RoundsForSeason selectedSeason={selected} />\n        </Box>\n      )}\n    </div>\n  )\n}\n\nexport default Seasons\n","import { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport LoginForm from './LoginForm'\nimport LogOut from './LogOut'\nimport Seasons from './Seasons'\nimport { CenteredContainer, RightSideContainer } from './styled-components'\nimport { FaPlus } from 'react-icons/fa'\nimport Button from '@mui/material/Button'\nimport { Paper } from '@mui/material'\n\nfunction MainPage() {\n  const navigate = useNavigate()\n  const [apiKey, setApiKey] = useState('')\n\n  useEffect(() => {\n    const ak = localStorage.getItem('apiKey')\n    if (ak) {\n      setApiKey(ak)\n    }\n  }, [setApiKey])\n\n  const storeApiKey = (apiKey: string) => {\n    localStorage.setItem('apiKey', apiKey)\n    setApiKey(apiKey)\n  }\n\n  return (\n    <div>\n      {apiKey === '' ? (\n        <div id=\"login\">\n          <CenteredContainer>\n            <LoginForm setApiKey={storeApiKey} />\n          </CenteredContainer>\n        </div>\n      ) : (\n        <Paper sx={{ m: 2, boxShadow: 0 }}>\n          <RightSideContainer>\n            <LogOut setApiKey={storeApiKey} />\n          </RightSideContainer>\n          <Seasons />\n          <Button variant=\"contained\" sx={{ ml: 2, mb: 2 }} onClick={() => navigate('/add')}>\n            <FaPlus /> Add Round\n          </Button>\n        </Paper>\n      )}\n    </div>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { root } from '.'\nimport AddRound from './component/AddRound'\nimport EditRound from './component/EditRound'\nimport MainPage from './component/MainPage'\n\nfunction AppRoutes() {\n  return (\n    <Router>\n      <Routes>\n        <Route path={`${root}/round/:id`} element={<EditRound />} />\n        <Route path={`${root}/add`} element={<AddRound />} />\n        <Route path={`${root}/`} element={<MainPage />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default AppRoutes\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material'\nimport React from 'react'\nimport AppRoutes from './AppRoutes'\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'light',\n  },\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <AppRoutes />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nconst publicUrl = (process.env.PUBLIC_URL || '')\nexport const root = publicUrl.endsWith('/') ? publicUrl.slice(0, -1) : publicUrl\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}