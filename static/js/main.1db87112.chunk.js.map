{"version":3,"sources":["http.ts","component/styled-components.ts","component/PlayerSelect.tsx","component/AddRound.tsx","component/EditRound.tsx","component/Button.tsx","component/Input.tsx","component/LoginForm.tsx","component/LogOut.tsx","component/RoundDetails.tsx","component/Rounds.tsx","component/Totals.tsx","component/RoundsForSeason.tsx","component/Seasons.tsx","component/MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["postData","a","url","data","headers","fetch","method","cache","body","JSON","stringify","response","ok","Error","json","putData","localStorage","getItem","isAbortError","error","name","getData","controller","AbortController","signal","promise","Promise","resolve","console","log","message","cancel","abort","login","username","password","process","getSeasons","putRoundData","deleteRound","id","deleteData","CenteredContainer","styled","div","RightSideContainer","LogOutButtonContainer","LoginFormContainer","WelcomeText","h2","InputContainer","ButtonContainer","HorizontalRule","h5","hr","StyledInput","h4","input","rotate360","keyframes","ErrorMessage","Spinner","StyledButton","button","SmallButton","StyledTable","p","background","table","FlexBox","Header","h1","Content","props","open","MEDIA_QUERY_IS_MOBILE","Container","Card","CardHeader","CardBody","multiComponents","css","SelectContainer","PlayerSelect","values","extraPoints","selectionLimit","index","onSelect","onRemove","onBountySelect","onBountyRemove","displayValue","isObject","onSearch","options","selectedValues","placeholder","style","multiselectContainer","width","AddRound","navigate","useNavigate","useState","autoComplateValues","setAutoComplateValues","totalsValues","setTotalsValues","Date","roundDate","setRoundDate","availablePlayers","setAvailablePlayers","setExtraPoints","players","setPlayers","bounties","setBounties","selectedSeason","setSelectedSeason","finishedPositions","setFinishedPositions","seasons","setSeasons","saving","setSaving","query","useRef","undefined","totalsQuery","useEffect","current","q","then","resp","tq","season","setSelected","list","selected","filter","e","length","position","setRemoved","removed","setBountySelected","setBountyRemoved","saveRound","toISOString","round","root","onClick","flexGrow","onChange","date","dateFormat","Array","map","x","i","it","every","disabled","EditRound","useParams","setRound","deleting","setDeleting","delRound","status","getRound","colSpan","toLocaleDateString","year","month","day","sort","b","finishedPosition","eliminatedPlayer","eliminator","points","extrapoint","window","confirm","Button","content","loading","Input","type","value","LoginForm","setApiKey","setUsername","setPassword","setLoading","errorMessage","setErrorMessage","clickMe","event","enteredName","target","LogOut","RoundDetails","to","amount","Rounds","roundsForSeason","Totals","eliminations","gamesPlayed","totalPoints","RoundsForSeason","rounds","setRounds","setEliminations","setGamesPlayed","setTotalPoints","showRounds","setShowRounds","totals","Seasons","hasNext","setHasNext","hasPrevious","setHasPrevious","allSeasons","indexOf","MainPage","apiKey","ak","storeApiKey","setItem","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","publicUrl","endsWith","slice","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1db87112.chunk.js","sourcesContent":["import { AutoComplateValuesRoundsForSeasonResponse, PromiseWithCancel, RoundDetails, RoundsForSeasonResponse, Status, TotalsForSeasonResponse } from './types'\n\nasync function postData(url = '', data = {}, headers = { 'Content-Type': 'application/json' }) {\n  const response = await fetch(url, {\n    method: 'POST',\n    cache: 'no-cache',\n    headers,\n    body: JSON.stringify(data),\n  })\n  if (!response.ok) {\n    throw Error(await response.json())\n  }\n  return response.json()\n}\n\nasync function putData(url = '', data = {}, headers = { 'Content-Type': 'application/json', 'x-api-key': localStorage.getItem('apiKey') as string }) {\n  const response = await fetch(url, {\n    method: 'PUT',\n    cache: 'no-cache',\n    headers,\n    body: JSON.stringify(data),\n  })\n  if (!response.ok) {\n    throw Error(await response.json())\n  }\n  return response.json()\n}\n\nfunction isAbortError(error: any): error is DOMException {\n  if (error && error.name === 'AbortError') {\n    return true\n  }\n  return false\n}\n\nexport const getData = (url: string, headers = { 'Content-Type': 'application/json', 'x-api-key': localStorage.getItem('apiKey') as string }) => {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const promise = new Promise(async (resolve) => {\n    try {\n      const response = await fetch(url, {\n        headers,\n        signal,\n      })\n      const data = await response.json()\n      resolve(data)\n    } catch (ex: unknown) {\n      if (isAbortError(ex)) {\n        console.log(ex.message)\n      }\n    }\n  })\n  ;(promise as PromiseWithCancel<any>).cancel = () => controller.abort()\n  return promise as PromiseWithCancel<any>\n}\n\nexport const deleteData = (url: string, headers = { 'Content-Type': 'application/json', 'x-api-key': localStorage.getItem('apiKey') as string }) => {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const promise = new Promise(async (resolve) => {\n    try {\n      const response = await fetch(url, {\n        method: 'DELETE',\n        cache: 'no-cache',\n        headers,\n        signal,\n      })\n      const data = await response.json()\n      resolve(data)\n    } catch (ex: unknown) {\n      if (isAbortError(ex)) {\n        console.log(ex.message)\n      }\n    }\n  })\n  ;(promise as PromiseWithCancel<any>).cancel = () => controller.abort()\n  return promise as PromiseWithCancel<any>\n}\n\nexport const login = async (username: string, password: string) => {\n  return await postData(process.env.REACT_APP_API_BASE_URL + '/login', { username, password })\n}\n\nexport const getRoundsForSeason = (season: string) => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/rounds-for-season?season=${season}`) as PromiseWithCancel<RoundsForSeasonResponse>\n}\n\n\nexport const getTotalsForSeason = (season: string) => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/totals-for-season?season=${season}`) as PromiseWithCancel<TotalsForSeasonResponse>\n}\n\nexport const getAutoComplateValues = () => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/autocomplete-values`) as PromiseWithCancel<AutoComplateValuesRoundsForSeasonResponse>\n}\n\nexport const getSeasons = async () => {\n  return await getData(`${process.env.REACT_APP_API_BASE_URL}/seasons`)\n}\n\nexport const putRoundData = async (data: Record<string, unknown>) => {\n  return await putData(process.env.REACT_APP_API_BASE_URL + '/round', data) as RoundDetails\n}\n\nexport const getRound = (id: string) => {\n  return getData(`${process.env.REACT_APP_API_BASE_URL}/round/${id}`) as PromiseWithCancel<RoundDetails>\n}\n\nexport const deleteRound = (id: string) => {\n  return deleteData(`${process.env.REACT_APP_API_BASE_URL}/round/${id}`) as PromiseWithCancel<Status>\n}","import styled, { css, keyframes } from 'styled-components'\n\nexport const CenteredContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n`\nexport const RightSideContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: right;\n`\nexport const LogOutButtonContainer = styled.div`\n  margin: 1rem 0 2rem 0;\n  width: 200px;\n`\n\nexport const LoginFormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 80vh;\n  width: 30vw;\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(8.5px);\n  -webkit-backdrop-filter: blur(8.5px);\n  border-radius: 10px;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 0.4rem;\n  @media only screen and (max-width: 320px) {\n    width: 80vw;\n    height: 90vh;\n    hr {\n      margin-bottom: 0.3rem;\n    }\n    h4 {\n      font-size: small;\n    }\n  }\n  @media only screen and (min-width: 360px) {\n    width: 80vw;\n    height: 90vh;\n    h4 {\n      font-size: small;\n    }\n  }\n  @media only screen and (min-width: 411px) {\n    width: 80vw;\n    height: 90vh;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 80vw;\n    height: 80vh;\n  }\n  @media only screen and (min-width: 1024px) {\n    width: 70vw;\n    height: 50vh;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 30vw;\n    height: 80vh;\n  }\n`\n\nexport const WelcomeText = styled.h2`\n  margin: 3rem 0 2rem 0;\n`\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 20%;\n  width: 100%;\n`\n\nexport const ButtonContainer = styled.div`\n  margin: 1rem 0 2rem 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const LoginWith = styled.h5`\n  cursor: pointer;\n`\n\nexport const HorizontalRule = styled.hr`\n  width: 90%;\n  height: 0.3rem;\n  border-radius: 0.8rem;\n  border: none;\n  background: linear-gradient(to right, #14163c 0%, #03217b 79%);\n  background-color: #ebd0d0;\n  margin: 1.5rem 0 1rem 0;\n  backdrop-filter: blur(25px);\n`\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin: 2rem 0 3rem 0;\n  width: 80%;\n`\n\nexport const ForgotPassword = styled.h4`\n  cursor: pointer;\n`\n\nexport const StyledInput = styled.input`\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  border-radius: 2rem;\n  width: 80%;\n  height: 3rem;\n  padding: 1rem;\n  border: none;\n  outline: none;\n  color: #3c354e;\n  font-size: 1rem;\n  font-weight: bold;\n  &:focus {\n    display: inline-block;\n    box-shadow: 0 0 0 0.2rem #b9abe0;\n    backdrop-filter: blur(12rem);\n    border-radius: 2rem;\n  }\n  &::placeholder {\n    color: #b9abe099;\n    font-weight: 100;\n    font-size: 1rem;\n  }\n`\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const ErrorMessage = styled.div`\n  color: #d8000c;\n  height: 24px;\n`\n\nexport const Spinner = styled.div`\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n\n  border-top: 2px solid grey;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid grey;\n  border-left: 4px solid black;\n  background: transparent;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const StyledButton = styled.button`\n  background: linear-gradient(to right, #14163c 0%, #03217b 79%);\n  text-transform: uppercase;\n  letter-spacing: 0.2rem;\n  width: 65%;\n  height: 3rem;\n  border: none;\n  color: white;\n  border-radius: 2rem;\n  cursor: pointer;\n  &:active {\n    transform: translateY(4px);\n  }\n  &:hover {\n    filter: brightness(1.5);\n  }\n`\n\nexport const SmallButton = styled.button`\n  background: linear-gradient(to right, #14163c 0%, #03217b 79%);\n  text-transform: uppercase;\n  margin: 20px;\n  width: 120px;\n  height: 25px;\n  border: none;\n  color: white;\n  border-radius: 2rem;\n  cursor: pointer;\n  &:disabled {\n    filter: brightness(0.5);\n    &:hover {\n      filter: brightness(0.5);\n    }\n  }\n  &:active {\n    transform: translateY(4px);\n  }\n  &:hover {\n    filter: brightness(1.5);\n  }\n`\n\nexport type StyledIconProps = {\n  background: string\n}\n\nexport const StyledIcon = styled.div`\n  height: 3.5rem;\n  width: 3.5rem;\n  background: ${(p: StyledIconProps) => p.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4rem;\n  color: white;\n  cursor: pointer;\n  svg {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n`\n\nexport const StyledTable = styled.table`\n  border-spacing: 0px;\n  background: rgba(255, 255, 255, 0.85);\n  width: 450px;\n  margin: 20px;\n  border: 1px solid black;\n  th,\n  td {\n    border: 1px solid black;\n    padding: 3px;\n  }\n  th:first-child {\n    border-right-width: 0px;\n    text-align: center;\n  }\n  th:last-child {\n    border-left-width: 0px;\n    text-align: right;\n  }\n  td:first-child {\n    text-align: center;\n  }\n  tr {\n    text-align: left;\n  }\n`\n\nexport const FlexBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 100%;\n  flex-wrap: wrap;\n`\nexport const AppWrapper = styled.div`\n  margin: 20px;\n`\n\nexport const FacebookBackground = 'linear-gradient(to right, #0546A0 0%, #0546A0 40%, #663FB6 100%)'\nexport const InstagramBackground = 'linear-gradient(to right, #A12AC4 0%, #ED586C 40%, #F0A853 100%)'\nexport const TwitterBackground = 'linear-gradient(to right, #56C1E1 0%, #35A9CE 50%)'\n\nexport const Header = styled.h1`\n  color: white;\n`\n\ninterface ContentProps {\n  open: boolean\n}\n\nexport const Content = styled.div`\n  border: 1px solid gray;\n  border-top: none;\n  opacity: ${(props: ContentProps) => (props.open ? '1' : '0')};\n  max-height: ${(props) => (props.open ? '100%' : '0')};\n  overflow: hidden;\n  padding: ${(props) => (props.open ? '15px' : '0 15px')};\n  transition: all 0.3s;\n\n  p {\n    margin: 0;\n  }\n`\n\nexport const MEDIA_QUERY_IS_MOBILE = '@media only screen and (max-width: 768px)'\nexport const MEDIA_QUERY_IS_MOBILE_XS = '@media only screen and (max-width: 525px)'\nexport const MEDIA_QUERY_IS_TABLET_OR_DESKTOP = '@media only screen and (min-width: 992px)'\nexport const MEDIA_QUERY_IS_TABLET = '@media only screen and (max-width: 991px) and (min-width: 769px)'\n\nexport const Container = styled.div`\n  width: 100%;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0.25rem 1.75rem;\n  ${MEDIA_QUERY_IS_MOBILE} {\n    font-size: 0.96em;\n    padding: 0.25rem 1.25rem;\n  }\n`\n\nexport const Card = styled.div`\n  min-width: 0;\n  display: flex;\n  margin: 1.25rem 0;\n  position: relative;\n  border-radius: 3px;\n  word-wrap: break-word;\n  background-color: #fff;\n  flex-direction: column;\n  background-clip: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  box-shadow: rgb(0 0 0 / 10%) 0px 1px 3px 0px, rgb(0 0 0 / 5%) 0px 5px 15px 0px;\n  ${MEDIA_QUERY_IS_MOBILE} {\n    border: none;\n    border-radius: 0;\n    box-shadow: none;\n    margin: 0;\n  }\n`\n\nexport const CardHeader = styled.div`\n  display: flex;\n  font-size: 1.15rem;\n  flex-flow: row wrap;\n  background-color: #fff;\n  padding: 0.75rem 1.25rem;\n  border-top-left-radius: 0.25rem;\n  border-top-right-radius: 0.25rem;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  ${MEDIA_QUERY_IS_MOBILE} {\n    font-size: 1.1rem;\n    text-align: center;\n    display: inline-block;\n    padding: 0 1.15rem 1rem;\n  }\n`\n\nexport const CardBody = styled.div<{ multiComponents?: boolean }>`\n  flex: 1 1 auto;\n  min-height: 32rem;\n  padding: 0.75rem 1.25rem;\n  ${({ multiComponents }) =>\n    multiComponents &&\n    css`\n      > div {\n        margin-bottom: 1.5rem;\n        :first-of-type > label {\n          margin-top: 0;\n        }\n        > label {\n          font-size: 18px;\n          margin-bottom: 0.5rem;\n        }\n      }\n    `}\n  ${MEDIA_QUERY_IS_MOBILE} {\n    padding: 0rem 0;\n  }\n`\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n`\n","import React from 'react'\nimport { SelectContainer } from './styled-components'\nimport { Multiselect } from 'multiselect-react-dropdown'\n\nexport interface PositionName {\n  position: number\n  name: string\n}\n\ntype PlayerSelectProps = Readonly<{\n  values: PositionName[]\n  extraPoints: PositionName[]\n  selectionLimit: number\n  index: number\n  onSelect: (selectedList: PositionName[], selected: PositionName) => any\n  onRemove: (removedList: PositionName[], removed: PositionName) => any\n  onBountySelect: (selectedList: PositionName[], selected: PositionName) => any\n  onBountyRemove: (selectedList: PositionName[], selected: PositionName) => any\n}>\n\nfunction PlayerSelect({ values, extraPoints, selectionLimit, index, onSelect, onRemove, onBountySelect, onBountyRemove }: PlayerSelectProps) {\n  return (\n    <SelectContainer>\n      <p>{index}.</p>\n      <Multiselect\n        key={index}\n        id={`finishedposition-${index}`}\n        displayValue=\"name\"\n        isObject={true}\n        onRemove={onRemove}\n        onSearch={function noRefCheck() {}}\n        onSelect={onSelect}\n        options={values}\n        selectedValues={[]}\n        placeholder={index === 1 ? 'Eliminated' : 'Eliminated / Eliminator'}\n        selectionLimit={selectionLimit}\n        style={{\n          multiselectContainer: {\n            width: '70%',\n          },\n        }}\n      />\n      <Multiselect\n        key={`extraPoints-${index}`}\n        id={`extraPoints-${index}`}\n        displayValue=\"name\"\n        isObject={true}\n        onSearch={function noRefCheck() {}}\n        onSelect={onBountySelect}\n        onRemove={onBountyRemove}\n        options={extraPoints}\n        selectedValues={[]}\n        selectionLimit={1}\n        placeholder={'Bounty'}\n        style={{\n          multiselectContainer: {\n            width: '130px',\n          },\n        }}\n      />\n    </SelectContainer>\n  )\n}\n\nexport default PlayerSelect\n","import React, { useState, useRef, useEffect } from 'react'\nimport { getAutoComplateValues, getTotalsForSeason, putRoundData } from '../http'\nimport PlayerSelect, { PositionName } from './PlayerSelect'\nimport { AutoComplateValuesRoundsForSeasonResponse, PromiseWithCancel, TotalsForSeasonResponse } from '../types'\nimport { Container, Card, CardBody, CardHeader, SmallButton, FlexBox } from './styled-components'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Multiselect } from 'multiselect-react-dropdown'\nimport { useNavigate } from 'react-router-dom'\nimport { root } from '..'\n\nfunction AddRound() {\n  const navigate = useNavigate()\n  const [autoComplateValues, setAutoComplateValues] = useState<AutoComplateValuesRoundsForSeasonResponse | null>(null)\n  const [totalsValues, setTotalsValues] = useState<TotalsForSeasonResponse | null>(null)\n  const [roundDate, setRoundDate] = useState(new Date())\n  const [availablePlayers, setAvailablePlayers] = useState<string[]>([])\n  const [extraPoints, setExtraPoints] = useState<string[]>([])\n  const [players, setPlayers] = useState<number>(5)\n  const [bounties, setBounties] = useState<PositionName[]>([])\n  const [selectedSeason, setSelectedSeason] = useState<string>('')\n  const [finishedPositions, setFinishedPositions] = useState<PositionName[][]>([])\n  const [seasons, setSeasons] = useState<string[]>([])\n  const [saving, setSaving] = useState<boolean>(false)\n  const query = useRef<PromiseWithCancel<AutoComplateValuesRoundsForSeasonResponse> | undefined>(undefined)\n  const totalsQuery = useRef<PromiseWithCancel<TotalsForSeasonResponse> | undefined>(undefined)\n\n  useEffect(() => {\n    console.log('useEffect', { autoComplateValues, availablePlayers })\n    if (!autoComplateValues) {\n      query.current?.cancel()\n      setAutoComplateValues(null)\n      const q = getAutoComplateValues()\n      query.current = q\n      q.then((resp) => {\n        setAutoComplateValues(resp)\n        setAvailablePlayers(resp.players)\n        console.log('resp.players', resp.players)\n        setExtraPoints(resp.extraPoints)\n        setSeasons(resp.seasons)\n        setSelectedSeason(resp.seasons[0])\n      })\n    }\n    if (!totalsValues && selectedSeason) {\n      totalsQuery.current?.cancel()\n      setTotalsValues(null)\n      const tq = getTotalsForSeason(selectedSeason)\n      totalsQuery.current = tq\n      tq.then((resp) => {\n        setTotalsValues(resp)\n      })\n    }\n  }, [autoComplateValues, availablePlayers, totalsValues, selectedSeason])\n\n  const setSelected = (list: PositionName[], selected: PositionName) => {\n    console.log('setSelected', { list, selected })\n    setFinishedPositions([...finishedPositions.filter((e) => e.length > 0 && e[0].position !== selected.position), list])\n  }\n\n  const setRemoved = (list: PositionName[], removed: PositionName) => {\n    console.log('setRemoved', { list, removed })\n    setFinishedPositions(finishedPositions.filter((e) => e.length > 0 && e[0].position !== removed.position))\n  }\n\n  const setBountySelected = (list: PositionName[], selected: PositionName) => {\n    console.log('setBountySelected', { list, selected })\n    setBounties([...bounties, selected])\n  }\n\n  const setBountyRemoved = (list: PositionName[], selected: PositionName) => {\n    console.log('setBountyRemoved', { list, selected })\n    setBounties(bounties.filter((e) => e.position !== selected.position))\n  }\n\n  const saveRound = async () => {\n    const data = { selectedSeason, roundDate: roundDate.toISOString(), finishedPositions, bounties, players }\n    console.log('saveRound', data)\n    try {\n      setSaving(true)\n      const response = await putRoundData(data)\n      console.log('saveRound', response)\n      if (response?.round?.id !== '') {\n        console.log('juuh', response)\n        navigate(`${root}/`)\n      }\n    } catch (e) {}\n    setSaving(false)\n  }\n\n  return (\n    <div>\n      <SmallButton onClick={() => navigate(`${root}/`)}>Back</SmallButton>\n      {autoComplateValues && (\n        <Container>\n          <Card>\n            <CardHeader>\n              <FlexBox>\n                Add Round Details\n                <Multiselect\n                  isObject={false}\n                  selectedValues={[seasons.length > 0 ? seasons[0] : '']}\n                  onSearch={function noRefCheck() {}}\n                  onSelect={(list, selected) => setSelectedSeason(selected)}\n                  options={seasons}\n                  placeholder={'Season'}\n                  selectionLimit={1}\n                  style={{\n                    multiselectContainer: {\n                      flexGrow: '1',\n                    },\n                  }}\n                />\n                <DatePicker selected={roundDate} onChange={(date: Date) => setRoundDate(date as Date)} dateFormat=\"dd.MM.yyyy\" />\n              </FlexBox>\n            </CardHeader>\n            <CardBody>\n              {[...Array(players)].map((x, i) => (\n                <PlayerSelect\n                  values={availablePlayers.map((it) => ({ position: i + 1, name: it }))}\n                  extraPoints={extraPoints.map((it) => ({ position: i + 1, name: it }))}\n                  onSelect={setSelected}\n                  onBountySelect={setBountySelected}\n                  onBountyRemove={setBountyRemoved}\n                  onRemove={setRemoved}\n                  selectionLimit={i == 0 ? 1 : 2}\n                  index={++i}\n                  key={i}\n                />\n              ))}\n\n              {players < 10 && <SmallButton onClick={() => setPlayers(players + 1)}>Add</SmallButton>}\n              {players > 1 && <SmallButton onClick={() => setPlayers(players - 1)}>Remove</SmallButton>}\n              {players > 1 && players < 11 && finishedPositions.length === players && finishedPositions.filter((it) => it.length > 0 && it[0].position !== 1).every((it) => it.length === 2) && (\n                <SmallButton onClick={() => saveRound()} disabled={saving}>\n                  Save\n                </SmallButton>\n              )}\n            </CardBody>\n          </Card>\n        </Container>\n      )}\n    </div>\n  )\n}\n\nexport default AddRound\n","import { useEffect, useRef, useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { deleteRound, getRound } from '../http'\nimport { PromiseWithCancel, RoundDetails } from '../types'\nimport { SmallButton, Spinner, StyledTable } from './styled-components'\nimport { FaTrash } from 'react-icons/fa'\nimport { root } from '..'\n\nfunction EditRound() {\n  const navigate = useNavigate()\n  let { id } = useParams()\n  const [round, setRound] = useState<RoundDetails>()\n  let query = useRef<PromiseWithCancel<RoundDetails> | undefined>(undefined)\n  const [deleting, setDeleting] = useState<boolean>(false)\n\n  const delRound = async () => {\n    try {\n      setDeleting(true)\n      const response = await deleteRound(id || '')\n      console.log('deleteRound', response)\n      if (response.status === 'deleted') {\n        navigate(`${root}/`)\n      }\n    } catch (e) {}\n    setDeleting(false)\n  }\n\n  useEffect(() => {\n    const q = getRound(id || '')\n    query.current = q\n    q.then((resp) => {\n      setRound(resp)\n    })\n  }, [id])\n\n  return (\n    <>\n      <SmallButton onClick={() => navigate(`${root}/`)}>Back</SmallButton>\n      {round ? (\n        <>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th colSpan={5}>Round - {new Date(round.round.date).toLocaleDateString('fi-FI', { year: 'numeric', month: 'numeric', day: 'numeric' })}</th>\n              </tr>\n              <tr>\n                <th>Rank</th>\n                <th>Player</th>\n                <th>Eliminator</th>\n                <th>Points</th>\n                <th>Extra</th>\n              </tr>\n            </thead>\n            <tbody>\n              {round.finishedPositions\n                .sort((a, b) => (a.finishedPosition < b.finishedPosition ? -1 : 1))\n                .map(function (it) {\n                  return (\n                    <tr key={it.finishedPosition}>\n                      <td>{it.finishedPosition}</td>\n                      <td>{it.eliminatedPlayer}</td>\n                      <td>{it.eliminator}</td>\n                      <td>{it.points}</td>\n                      <td>{it?.extrapoint}</td>\n                    </tr>\n                  )\n                })}\n            </tbody>\n          </StyledTable>\n          <SmallButton onClick={() => (window.confirm('Delete round?') ? delRound() : '')} disabled={deleting}>\n            <FaTrash /> Delete\n          </SmallButton>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  )\n}\n\nexport default EditRound\n","import React from 'react'\nimport { ButtonProps } from '../types'\nimport { Spinner, StyledButton } from './styled-components'\n\nexport default function Button({ content, loading, onClick }: ButtonProps) {\n  return <StyledButton onClick={onClick}>{loading ? <Spinner /> : <div>{content}</div>}</StyledButton>\n}\n","import React from 'react'\nimport { InputProps } from '../types'\nimport { StyledInput } from './styled-components'\n\nexport default function Input({ type, placeholder, value, onChange }: InputProps) {\n  return <StyledInput type={type} placeholder={placeholder} value={value} onChange={onChange} />\n}\n","import React, { useState } from 'react'\nimport Button from './Button'\nimport Input from './Input'\nimport { ErrorMessage, LoginFormContainer, WelcomeText, InputContainer, ButtonContainer, HorizontalRule } from './styled-components'\nimport { login } from '../http'\nimport { LoginFormProps } from '../types'\n\nfunction LoginForm({ setApiKey }: LoginFormProps) {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const clickMe = async () => {\n    setLoading(true)\n    setErrorMessage('')\n    try {\n      const response = await login(username, password)\n      setLoading(false)\n      setApiKey(response['api-key'])\n    } catch (e) {\n      setErrorMessage('Invalid credentials')\n      setLoading(false)\n    }\n  }\n  const usernameInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const enteredName = event.target.value\n    setUsername(enteredName)\n  }\n  const passwordInputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const enteredName = event.target.value\n    setPassword(enteredName)\n  }\n  return (\n    <LoginFormContainer>\n      <WelcomeText>Welcome</WelcomeText>\n      <InputContainer>\n        <Input type=\"text\" placeholder=\"Username\" value={username} onChange={usernameInputHandler} />\n        <Input type=\"password\" placeholder=\"Password\" value={password} onChange={passwordInputHandler} />\n      </InputContainer>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <ButtonContainer>\n        <Button content=\"Log in\" onClick={clickMe} loading={loading} />\n      </ButtonContainer>\n      {/* <LoginWith>OR LOGIN WITH</LoginWith> */}\n      <HorizontalRule />\n      {/*       <IconsContainer>\n        <Icon color={FacebookBackground}>\n          <FaFacebookF />\n        </Icon>\n        <Icon color={InstagramBackground}>\n          <FaInstagram />\n        </Icon>\n        <Icon color={TwitterBackground}>\n          <FaTwitter />\n        </Icon>\n      </IconsContainer>\n      <ForgotPassword>Forgot Password ?</ForgotPassword> */}\n    </LoginFormContainer>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport { LogOutButtonContainer, StyledButton } from './styled-components'\n\ninterface LogOutProps {\n  setApiKey: (apiKey: string) => void\n}\n\nexport default function LogOut({ setApiKey }: LogOutProps) {\n  const logOut = () => {\n    setApiKey('')\n  }\n  return (\n    <LogOutButtonContainer>\n      <StyledButton onClick={logOut}>Logout</StyledButton>\n    </LogOutButtonContainer>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport { RoundDetailsProps } from '../types'\nimport { StyledTable } from './styled-components'\nimport { FaEdit } from 'react-icons/fa'\nimport { root } from '..'\n\nfunction RoundDetails({ round, index }: RoundDetailsProps) {\n  return (\n    <>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan={4}>\n              Round {index} - {new Date(round.round.date).toLocaleDateString('fi-FI', { year: 'numeric', month: 'numeric', day: 'numeric' })}\n            </th>\n            <th>\n              <Link to={`${root}/round/${round.round.id}`}>\n                <FaEdit />\n              </Link>\n            </th>\n          </tr>\n          <tr>\n            <th>Rank</th>\n            <th>Player</th>\n            <th>Eliminator</th>\n            <th>Points</th>\n            <th>Extra</th>\n          </tr>\n        </thead>\n        <tbody>\n          {round.finishedPositions.map(function (it, index) {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{it.eliminatedPlayer}</td>\n                <td>{it.eliminator}</td>\n                <td>{it.points}</td>\n                <td>\n                  {it?.extraPoints?.type} {it?.extraPoints?.amount}\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </StyledTable>\n    </>\n  )\n}\n\nexport default RoundDetails\n","import React from 'react'\nimport { RoundsProps } from '../types'\nimport RoundDetails from './RoundDetails'\nimport { FlexBox } from './styled-components'\n\nfunction Rounds({ roundsForSeason }: RoundsProps) {\n  return (\n    <FlexBox data-test-id='rounds-for-season'>\n      {roundsForSeason.map(function (it, index) {\n        return <RoundDetails round={it} index={index + 1} key={index} />\n      })}\n    </FlexBox>\n  )\n}\n\nexport default Rounds\n","import { TotalsProps } from '../types'\nimport { FlexBox, StyledTable } from './styled-components'\n\nfunction Totals({ eliminations, gamesPlayed, totalPoints }: TotalsProps) {\n  return (\n    <FlexBox data-test-id='totals'>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan={2}>Participations</th>\n          </tr>\n          <tr>\n            <th>Player</th>\n            <th>Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {gamesPlayed.map(function (it, index) {\n            return (\n              <tr key={index}>\n                <td>{it.name}</td>\n                <td>{it.value}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </StyledTable>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan={2}>Total Points</th>\n          </tr>\n          <tr>\n            <th>Player</th>\n            <th>Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {totalPoints.map(function (it, index) {\n            return (\n              <tr key={index}>\n                <td>{it.name}</td>\n                <td>{it.value}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </StyledTable>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan={2}>Eliminations</th>\n          </tr>\n          <tr>\n            <th>Player</th>\n            <th>Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {eliminations.map(function (it, index) {\n            return (\n              <tr key={index}>\n                <td>{it.name}</td>\n                <td>{it.value}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </StyledTable>\n    </FlexBox>\n  )\n}\n\nexport default Totals\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getRoundsForSeason } from '../http'\nimport { RoundContainer, RoundsForSeasonProps, NameValue, RoundsForSeasonResponse, PromiseWithCancel } from '../types'\nimport Rounds from './Rounds'\nimport { Spinner, Content, SmallButton } from './styled-components'\nimport Totals from './Totals'\n\nfunction RoundsForSeason({ selectedSeason }: RoundsForSeasonProps) {\n  const [rounds, setRounds] = useState<RoundContainer[]>([])\n  // const [season, setSeason] = useState({ name: '' })\n  const [eliminations, setEliminations] = useState<NameValue[]>([])\n  const [gamesPlayed, setGamesPlayed] = useState<NameValue[]>([])\n  const [totalPoints, setTotalPoints] = useState<NameValue[]>([])\n  const [showRounds, setShowRounds] = useState(true)\n  let query = useRef<PromiseWithCancel<RoundsForSeasonResponse> | undefined>(undefined)\n\n  useEffect(() => {\n    query.current?.cancel()\n    setRounds([])\n    const q = getRoundsForSeason(selectedSeason)\n    query.current = q\n    q.then((resp) => {\n      setRounds(resp.rounds)\n      // setSeason(resp.season)\n      setEliminations(resp.totals.eliminations)\n      setGamesPlayed(resp.totals.gamesPlayed)\n      setTotalPoints(resp.totals.totalPoints)\n    })\n  }, [selectedSeason])\n\n  return (\n    <div>\n      {rounds.length === 0 ? (\n        <div>\n          <Spinner />\n        </div>\n      ) : (\n        <div>\n          <SmallButton onClick={() => setShowRounds(!showRounds)}>Rounds</SmallButton>\n          <Content id='rounds-for-current-season' open={showRounds}>\n            <Rounds roundsForSeason={rounds} />\n          </Content>\n          <Totals eliminations={eliminations} gamesPlayed={gamesPlayed} totalPoints={totalPoints}/>\n          <div />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default RoundsForSeason\n","import { useState, useEffect } from 'react'\nimport { getSeasons } from '../http'\nimport RoundsForSeason from './RoundsForSeason'\n\nimport { FlexBox, Header, SmallButton, Spinner } from './styled-components'\n\nfunction Seasons() {\n  const [selected, setSelected] = useState('')\n  const [seasons, setSeasons] = useState<string[]>([])\n  const [hasNext, setHasNext] = useState(false)\n  const [hasPrevious, setHasPrevious] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      const resp = await getSeasons()\n      if (resp.seasons.length > 0) {\n        const selectedSeason = resp.seasons[0]\n        const allSeasons = resp.seasons\n        setSelected(selectedSeason)\n        setSeasons(allSeasons)\n        setHasNext(allSeasons.indexOf(selectedSeason) - 1 >= 0)\n        setHasPrevious(allSeasons.indexOf(selectedSeason) + 1 < allSeasons.length)\n      }\n    })()\n  }, [setSeasons, setSelected, setHasNext, setHasPrevious])\n\n  const setPrevious = () => {\n    const index = seasons.indexOf(selected) + 1\n    if (hasPrevious) {\n      setSelected(seasons[index])\n      setHasNext(seasons.indexOf(seasons[index]) - 1 >= 0)\n      setHasPrevious(seasons.indexOf(seasons[index]) + 1 < seasons.length)\n    }\n  }\n  const setNext = () => {\n    const index = seasons.indexOf(selected) - 1\n    if (hasNext) {\n      setSelected(seasons[index])\n      setHasNext(seasons.indexOf(seasons[index]) - 1 >= 0)\n      setHasPrevious(seasons.indexOf(seasons[index]) + 1 < seasons.length)\n    }\n  }\n\n  return (\n    <div>\n      {seasons.length === 0 ? (\n        <div>\n          <Spinner />\n        </div>\n      ) : (\n        <FlexBox>\n          <SmallButton onClick={setPrevious} disabled={!hasPrevious}>\n            Previous\n          </SmallButton>\n          <Header>{selected}</Header>\n          <SmallButton onClick={setNext} disabled={!hasNext}>\n            Next\n          </SmallButton>\n          <RoundsForSeason selectedSeason={selected} />\n        </FlexBox>\n      )}\n    </div>\n  )\n}\n\nexport default Seasons\n","import { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport LoginForm from './LoginForm'\nimport LogOut from './LogOut'\nimport Seasons from './Seasons'\nimport { CenteredContainer, RightSideContainer, SmallButton } from './styled-components'\nimport { FaPlus } from 'react-icons/fa'\nimport { root } from '..'\n\nfunction MainPage() {\n  const navigate = useNavigate()\n  const [apiKey, setApiKey] = useState('')\n\n  useEffect(() => {\n    const ak = localStorage.getItem('apiKey')\n    if (ak) {\n      setApiKey(ak)\n    }\n  }, [setApiKey])\n\n  const storeApiKey = (apiKey: string) => {\n    localStorage.setItem('apiKey', apiKey)\n    setApiKey(apiKey)\n  }\n\n  return (\n    <div>\n      {apiKey === '' ? (\n        <CenteredContainer>\n          <LoginForm setApiKey={storeApiKey} />\n        </CenteredContainer>\n      ) : (\n        <div>\n          <RightSideContainer>\n            <LogOut setApiKey={storeApiKey} />\n          </RightSideContainer>\n          <Seasons />\n          <SmallButton onClick={() => navigate(`${root}/add`)}>\n            <FaPlus /> Add Round\n          </SmallButton>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { root } from '.'\nimport AddRound from './component/AddRound'\nimport EditRound from './component/EditRound'\nimport MainPage from './component/MainPage'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Routes>\n          <Route path={`${root}/round/:id`} element={<EditRound />} />\n          <Route path={`${root}/add`} element={<AddRound />} />\n          <Route path={`${root}/`} element={<MainPage />} />\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nconst publicUrl = (process.env.PUBLIC_URL || '')\nexport const root = publicUrl.endsWith('/') ? publicUrl.slice(0, -1) : publicUrl\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}